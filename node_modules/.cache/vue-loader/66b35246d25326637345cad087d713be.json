{"remainingRequest":"D:\\Project\\real-estate\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Project\\real-estate\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project\\real-estate\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project\\real-estate\\src\\components\\home\\Home.vue?vue&type=template&id=74b1de62&scoped=true&","dependencies":[{"path":"D:\\Project\\real-estate\\src\\components\\home\\Home.vue","mtime":1582720109848},{"path":"D:\\Project\\real-estate\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project\\real-estate\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Project\\real-estate\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project\\real-estate\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}